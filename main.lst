C51 COMPILER V9.01   MAIN                                                                  09/14/2018 22:41:17 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\main.c BROWSE PRINT(.\main.lst) OBJECT(main.obj)

line level    source

   1          #include "../h/utility.h"
   2          #include "../h/82c55.h"
   3          #include "../h/serial.h"
   4          #include "reg51.h"
   5          #include "intrins.h"                             //_nop_();延时函数用
   6          
   7           sbit level_water= P0^0;
   8           sbit selfpower  = P0^2;
   9           sbit beeppower  = P0^1;
  10             static int Countor=0;
  11             sbit selfpower2 = P1^0;
  12           
  13          void main()
  14          {   
  15   1             int loop =1;     int count=0;
  16   1                 int signal=0,old_signal=0;
  17   1                 selfpower=1;
  18   1                                        selfpower2=1;
  19   1         EA=1; //开总中断
  20   1      ET0=1; //定时器T0 中断允许
  21   1      TMOD=0x01; //使用定时器T0 的模式2
  22   1      TH0=(65536-46083)/256; //定时器T0 的高8 位赋初值
  23   1      TL0=(65536-46083)%256; //定时器T0 的高8 位赋初值
  24   1      TR0=1; //启动定时器T0
  25   1      
  26   1      
  27   1      
  28   1                 beeppower=0;
  29   1               //  beeppower=1;Delay(200000);beeppower=0;        Delay(300000);
  30   1             serial_port_init();       //串口初始化
  31   1                              send_UART('p'); 
  32   1      
  33   1      
  34   1             // nec82c55_init();       //IO扩展初始化
  35   1              while(loop)
  36   1              {                          
  37   2                              signal=  level_water;                   
  38   2                  if(signal==1)
  39   2                              {               
  40   3                                  count++;
  41   3                      send_UART('h');   
  42   3                                      if(Countor >=20*60*25||count >=4)
  43   3                                      {
  44   4                                          beeppower=1;
  45   4                                              Countor=0;
  46   4                                              while(Countor<20*35)
  47   4                                              Delay(10000);
  48   4                                              count = 0;
  49   4                                              selfpower = 0;
  50   4                                              PCON=1;
  51   4                              while(1);//PCON=1;`
  52   4                                              loop =0;
  53   4                                      }
  54   3                              }
  55   2                              else if(signal ==0)
C51 COMPILER V9.01   MAIN                                                                  09/14/2018 22:41:17 PAGE 2   

  56   2                              {
  57   3                                      
  58   3                                  send_UART('l');
  59   3                                      count=0;
  60   3                                
  61   3                                        //    if(count >=3) {count = 0;pumponoff = 1;selfpower = 1; loop =0; }
  62   3                              }
  63   2                              Delay(2000);
  64   2              }        
  65   1      }
  66           
  67           void Time0(void) interrupt 1 using 0 //“interrupt”声明函数为中断服务函数
  68          //其后的1 为定时器T0 的中断编号；0 表示使用第0 组工作
  69          {
  70   1      
  71   1      Countor++; //中断次数自加1
  72   1      //if(Countor==20*6) //若累计满20 次，即计时满1s
  73   1      //{             send_UART('x');
  74   1      //         selfpower=0;Delay(20);   while(1);
  75   1      // Countor=0; //将Countor 清0，重新从0 开始计数
  76   1      //}
  77   1      TH0=(65536-46083)/256; //定时器T0 的高8 位重新赋初值
  78   1      TL0=(65536-46083)%256; //定时器T0 的高8 位重新赋初值
  79   1      //       TR0=1; //启动定时器T0
  80   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    206    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
